import type { NextPage } from "next";
import Head from "next/head";
import { trpc } from "../utils/trpc";
import Link from "next/link";

const Dashboard: NextPage = () => {
  const batchFetch = trpc.useQuery(["article.batch-data"]);
  console.log(batchFetch.data);

  return (
    <>
      <Head>
        <title>Pulth App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <nav className="bg-slate-200 h-12  w-screen px-12 flex justify-between items-center">
        <Link href="/">Pulth</Link>
        <div className="flex gap-4">
          <Link href="#">
            <div className="p-1.5 rounded-md  border border-slate-400">
              Login
            </div>
          </Link>
          <Link href="#">
            <div className="p-1.5 rounded-md  border border-slate-400">
              Register
            </div>
          </Link>
        </div>
      </nav>
      <main className="w-full p-5 sm:w-11/12 md:w-10/12 lg:w-9/12 xl:w-8/12 mx-auto">
        {batchFetch.data &&
          batchFetch.data.map((articleBlock) => {
            switch (articleBlock.type) {
              case "paragraph":
                return <p className="inline"> {articleBlock.data.text} </p>;
              case "bold":
                return (
                  <b className="font-semibold">{articleBlock.data.text}</b>
                );
              case "italic":
                return <i className="font-italic">{articleBlock.data.text}</i>;
              case "code":
                return (
                  <code className="bg-slate-300 px-0.5 mx-0.5 inl  rounded font-mono font-thin ">
                    {articleBlock.data.text}
                  </code>
                );
              case "highlight":
                return (
                  <mark className="bg-yellow-300 rounded mx-0.5 px-0.5 text-black">
                    {articleBlock.data.text}
                  </mark>
                );
              case "link":
                return (
                  <Link href={articleBlock.data.href!}>
                    <a className="underline">{articleBlock.data.text}</a>
                  </Link>
                );
            }
          })}
      </main>
    </>
  );
};

export default Dashboard;
